/**
 * Codealpine
 * The codealpine API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClimbingProvidedAnswers from './ClimbingProvidedAnswers';
import ClimbingQuestionnaire from './ClimbingQuestionnaire';

/**
 * The ClimbingQuestion model module.
 * @module model/ClimbingQuestion
 * @version 1.0
 */
class ClimbingQuestion {
    /**
     * Constructs a new <code>ClimbingQuestion</code>.
     * @alias module:model/ClimbingQuestion
     * @param id {Number} 
     * @param slug {String} 
     * @param question {String} 
     * @param questionnaire {module:model/ClimbingQuestionnaire} 
     * @param answers {Array.<module:model/ClimbingProvidedAnswers>} 
     */
    constructor(id, slug, question, questionnaire, answers) { 
        
        ClimbingQuestion.initialize(this, id, slug, question, questionnaire, answers);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, slug, question, questionnaire, answers) { 
        obj['id'] = id;
        obj['slug'] = slug;
        obj['question'] = question;
        obj['questionnaire'] = questionnaire;
        obj['answers'] = answers;
    }

    /**
     * Constructs a <code>ClimbingQuestion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClimbingQuestion} obj Optional instance to populate.
     * @return {module:model/ClimbingQuestion} The populated <code>ClimbingQuestion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClimbingQuestion();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('question')) {
                obj['question'] = ApiClient.convertToType(data['question'], 'String');
            }
            if (data.hasOwnProperty('questionnaire')) {
                obj['questionnaire'] = ClimbingQuestionnaire.constructFromObject(data['questionnaire']);
            }
            if (data.hasOwnProperty('answers')) {
                obj['answers'] = ApiClient.convertToType(data['answers'], [ClimbingProvidedAnswers]);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
ClimbingQuestion.prototype['id'] = undefined;

/**
 * @member {String} slug
 */
ClimbingQuestion.prototype['slug'] = undefined;

/**
 * @member {String} question
 */
ClimbingQuestion.prototype['question'] = undefined;

/**
 * @member {module:model/ClimbingQuestionnaire} questionnaire
 */
ClimbingQuestion.prototype['questionnaire'] = undefined;

/**
 * @member {Array.<module:model/ClimbingProvidedAnswers>} answers
 */
ClimbingQuestion.prototype['answers'] = undefined;






export default ClimbingQuestion;

