/*
 * Codealpine
 * The codealpine API description
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ClimbingProvidedAnswers} from './ClimbingProvidedAnswers';
import {ClimbingQuestionnaire} from './ClimbingQuestionnaire';

/**
 * The ClimbingQuestion model module.
 * @module model/ClimbingQuestion
 * @version 1.0
 */
export class ClimbingQuestion {
  /**
   * Constructs a new <code>ClimbingQuestion</code>.
   * @alias module:model/ClimbingQuestion
   * @class
   * @param id {Number} 
   * @param slug {String} 
   * @param question {String} 
   * @param questionnaire {module:model/ClimbingQuestionnaire} 
   * @param answers {module:model/ClimbingProvidedAnswers} 
   */
  constructor(id, slug, question, questionnaire, answers) {
    this.id = id;
    this.slug = slug;
    this.question = question;
    this.questionnaire = questionnaire;
    this.answers = answers;
  }

  /**
   * Constructs a <code>ClimbingQuestion</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ClimbingQuestion} obj Optional instance to populate.
   * @return {module:model/ClimbingQuestion} The populated <code>ClimbingQuestion</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ClimbingQuestion();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('slug'))
        obj.slug = ApiClient.convertToType(data['slug'], 'String');
      if (data.hasOwnProperty('question'))
        obj.question = ApiClient.convertToType(data['question'], 'String');
      if (data.hasOwnProperty('questionnaire'))
        obj.questionnaire = ClimbingQuestionnaire.constructFromObject(data['questionnaire']);
      if (data.hasOwnProperty('answers'))
        obj.answers = ClimbingProvidedAnswers.constructFromObject(data['answers']);
    }
    return obj;
  }
}

/**
 * @member {Number} id
 */
ClimbingQuestion.prototype.id = undefined;

/**
 * @member {String} slug
 */
ClimbingQuestion.prototype.slug = undefined;

/**
 * @member {String} question
 */
ClimbingQuestion.prototype.question = undefined;

/**
 * @member {module:model/ClimbingQuestionnaire} questionnaire
 */
ClimbingQuestion.prototype.questionnaire = undefined;

/**
 * @member {module:model/ClimbingProvidedAnswers} answers
 */
ClimbingQuestion.prototype.answers = undefined;

