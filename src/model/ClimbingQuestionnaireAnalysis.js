/**
 * Codealpine
 * The codealpine API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClimbingQuestionnaire from './ClimbingQuestionnaire';
import ClimbingQuestionnaireUser from './ClimbingQuestionnaireUser';

/**
 * The ClimbingQuestionnaireAnalysis model module.
 * @module model/ClimbingQuestionnaireAnalysis
 * @version 1.0
 */
class ClimbingQuestionnaireAnalysis {
    /**
     * Constructs a new <code>ClimbingQuestionnaireAnalysis</code>.
     * @alias module:model/ClimbingQuestionnaireAnalysis
     * @param id {Number} 
     * @param message {String} 
     * @param minValue {Number} 
     * @param maxValue {Number} 
     * @param questionnaire {module:model/ClimbingQuestionnaire} 
     * @param userResponse {module:model/ClimbingQuestionnaireUser} 
     */
    constructor(id, message, minValue, maxValue, questionnaire, userResponse) { 
        
        ClimbingQuestionnaireAnalysis.initialize(this, id, message, minValue, maxValue, questionnaire, userResponse);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, message, minValue, maxValue, questionnaire, userResponse) { 
        obj['id'] = id;
        obj['message'] = message;
        obj['minValue'] = minValue;
        obj['maxValue'] = maxValue;
        obj['questionnaire'] = questionnaire;
        obj['userResponse'] = userResponse;
    }

    /**
     * Constructs a <code>ClimbingQuestionnaireAnalysis</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClimbingQuestionnaireAnalysis} obj Optional instance to populate.
     * @return {module:model/ClimbingQuestionnaireAnalysis} The populated <code>ClimbingQuestionnaireAnalysis</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClimbingQuestionnaireAnalysis();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('minValue')) {
                obj['minValue'] = ApiClient.convertToType(data['minValue'], 'Number');
            }
            if (data.hasOwnProperty('maxValue')) {
                obj['maxValue'] = ApiClient.convertToType(data['maxValue'], 'Number');
            }
            if (data.hasOwnProperty('questionnaire')) {
                obj['questionnaire'] = ClimbingQuestionnaire.constructFromObject(data['questionnaire']);
            }
            if (data.hasOwnProperty('userResponse')) {
                obj['userResponse'] = ClimbingQuestionnaireUser.constructFromObject(data['userResponse']);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
ClimbingQuestionnaireAnalysis.prototype['id'] = undefined;

/**
 * @member {String} message
 */
ClimbingQuestionnaireAnalysis.prototype['message'] = undefined;

/**
 * @member {Number} minValue
 */
ClimbingQuestionnaireAnalysis.prototype['minValue'] = undefined;

/**
 * @member {Number} maxValue
 */
ClimbingQuestionnaireAnalysis.prototype['maxValue'] = undefined;

/**
 * @member {module:model/ClimbingQuestionnaire} questionnaire
 */
ClimbingQuestionnaireAnalysis.prototype['questionnaire'] = undefined;

/**
 * @member {module:model/ClimbingQuestionnaireUser} userResponse
 */
ClimbingQuestionnaireAnalysis.prototype['userResponse'] = undefined;






export default ClimbingQuestionnaireAnalysis;

