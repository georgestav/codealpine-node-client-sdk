/**
 * Codealpine
 * The codealpine API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClimbingQuestion from './ClimbingQuestion';
import ClimbingQuestionnaireAnalysis from './ClimbingQuestionnaireAnalysis';
import ClimbingQuestionnaireUser from './ClimbingQuestionnaireUser';

/**
 * The ClimbingQuestionnaire model module.
 * @module model/ClimbingQuestionnaire
 * @version 1.0
 */
class ClimbingQuestionnaire {
    /**
     * Constructs a new <code>ClimbingQuestionnaire</code>.
     * @alias module:model/ClimbingQuestionnaire
     * @param id {Number} 
     * @param slug {String} 
     * @param title {String} 
     * @param description {String} 
     * @param accessRequired {String} 
     * @param climbingQuestion {Array.<module:model/ClimbingQuestion>} 
     * @param analysis {Array.<module:model/ClimbingQuestionnaireAnalysis>} 
     * @param userResponses {Array.<module:model/ClimbingQuestionnaireUser>} 
     */
    constructor(id, slug, title, description, accessRequired, climbingQuestion, analysis, userResponses) { 
        
        ClimbingQuestionnaire.initialize(this, id, slug, title, description, accessRequired, climbingQuestion, analysis, userResponses);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, slug, title, description, accessRequired, climbingQuestion, analysis, userResponses) { 
        obj['id'] = id;
        obj['slug'] = slug;
        obj['title'] = title;
        obj['description'] = description;
        obj['accessRequired'] = accessRequired;
        obj['climbingQuestion'] = climbingQuestion;
        obj['analysis'] = analysis;
        obj['userResponses'] = userResponses;
    }

    /**
     * Constructs a <code>ClimbingQuestionnaire</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClimbingQuestionnaire} obj Optional instance to populate.
     * @return {module:model/ClimbingQuestionnaire} The populated <code>ClimbingQuestionnaire</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClimbingQuestionnaire();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('accessRequired')) {
                obj['accessRequired'] = ApiClient.convertToType(data['accessRequired'], 'String');
            }
            if (data.hasOwnProperty('climbingQuestion')) {
                obj['climbingQuestion'] = ApiClient.convertToType(data['climbingQuestion'], [ClimbingQuestion]);
            }
            if (data.hasOwnProperty('analysis')) {
                obj['analysis'] = ApiClient.convertToType(data['analysis'], [ClimbingQuestionnaireAnalysis]);
            }
            if (data.hasOwnProperty('userResponses')) {
                obj['userResponses'] = ApiClient.convertToType(data['userResponses'], [ClimbingQuestionnaireUser]);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
ClimbingQuestionnaire.prototype['id'] = undefined;

/**
 * @member {String} slug
 */
ClimbingQuestionnaire.prototype['slug'] = undefined;

/**
 * @member {String} title
 */
ClimbingQuestionnaire.prototype['title'] = undefined;

/**
 * @member {String} description
 */
ClimbingQuestionnaire.prototype['description'] = undefined;

/**
 * @member {String} accessRequired
 */
ClimbingQuestionnaire.prototype['accessRequired'] = undefined;

/**
 * @member {Array.<module:model/ClimbingQuestion>} climbingQuestion
 */
ClimbingQuestionnaire.prototype['climbingQuestion'] = undefined;

/**
 * @member {Array.<module:model/ClimbingQuestionnaireAnalysis>} analysis
 */
ClimbingQuestionnaire.prototype['analysis'] = undefined;

/**
 * @member {Array.<module:model/ClimbingQuestionnaireUser>} userResponses
 */
ClimbingQuestionnaire.prototype['userResponses'] = undefined;






export default ClimbingQuestionnaire;

