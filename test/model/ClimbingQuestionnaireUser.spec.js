/*
 * Codealpine
 * The codealpine API description
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Codealpine);
  }
}(this, function(expect, Codealpine) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ClimbingQuestionnaireUser', function() {
      beforeEach(function() {
        instance = new Codealpine.ClimbingQuestionnaireUser();
      });

      it('should create an instance of ClimbingQuestionnaireUser', function() {
        // TODO: update the code to test ClimbingQuestionnaireUser
        expect(instance).to.be.a(Codealpine.ClimbingQuestionnaireUser);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property userId (base name: "userId")', function() {
        // TODO: update the code to test the property userId
        expect(instance).to.have.property('userId');
        // expect(instance.userId).to.be(expectedValueLiteral);
      });

      it('should have the property result (base name: "result")', function() {
        // TODO: update the code to test the property result
        expect(instance).to.have.property('result');
        // expect(instance.result).to.be(expectedValueLiteral);
      });

      it('should have the property analysis (base name: "analysis")', function() {
        // TODO: update the code to test the property analysis
        expect(instance).to.have.property('analysis');
        // expect(instance.analysis).to.be(expectedValueLiteral);
      });

      it('should have the property answers (base name: "answers")', function() {
        // TODO: update the code to test the property answers
        expect(instance).to.have.property('answers');
        // expect(instance.answers).to.be(expectedValueLiteral);
      });

      it('should have the property questionnaires (base name: "questionnaires")', function() {
        // TODO: update the code to test the property questionnaires
        expect(instance).to.have.property('questionnaires');
        // expect(instance.questionnaires).to.be(expectedValueLiteral);
      });

      it('should have the property createdAt (base name: "createdAt")', function() {
        // TODO: update the code to test the property createdAt
        expect(instance).to.have.property('createdAt');
        // expect(instance.createdAt).to.be(expectedValueLiteral);
      });

    });
  });

}));
