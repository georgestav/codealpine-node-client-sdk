/*
 * Codealpine
 * The codealpine API description
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Codealpine);
  }
}(this, function(expect, Codealpine) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ClimbingQuestionnaire', function() {
      beforeEach(function() {
        instance = new Codealpine.ClimbingQuestionnaire();
      });

      it('should create an instance of ClimbingQuestionnaire', function() {
        // TODO: update the code to test ClimbingQuestionnaire
        expect(instance).to.be.a(Codealpine.ClimbingQuestionnaire);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property slug (base name: "slug")', function() {
        // TODO: update the code to test the property slug
        expect(instance).to.have.property('slug');
        // expect(instance.slug).to.be(expectedValueLiteral);
      });

      it('should have the property title (base name: "title")', function() {
        // TODO: update the code to test the property title
        expect(instance).to.have.property('title');
        // expect(instance.title).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property accessRequired (base name: "accessRequired")', function() {
        // TODO: update the code to test the property accessRequired
        expect(instance).to.have.property('accessRequired');
        // expect(instance.accessRequired).to.be(expectedValueLiteral);
      });

      it('should have the property climbingQuestion (base name: "climbingQuestion")', function() {
        // TODO: update the code to test the property climbingQuestion
        expect(instance).to.have.property('climbingQuestion');
        // expect(instance.climbingQuestion).to.be(expectedValueLiteral);
      });

      it('should have the property analysis (base name: "analysis")', function() {
        // TODO: update the code to test the property analysis
        expect(instance).to.have.property('analysis');
        // expect(instance.analysis).to.be(expectedValueLiteral);
      });

      it('should have the property userResponses (base name: "userResponses")', function() {
        // TODO: update the code to test the property userResponses
        expect(instance).to.have.property('userResponses');
        // expect(instance.userResponses).to.be(expectedValueLiteral);
      });

    });
  });

}));
