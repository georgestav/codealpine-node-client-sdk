/*
 * Codealpine
 * The codealpine API description
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Codealpine);
  }
}(this, function(expect, Codealpine) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Codealpine.NavigationLinksApi();
  });

  describe('(package)', function() {
    describe('NavigationLinksApi', function() {
      describe('navlinksControllerV1Create', function() {
        it('should call navlinksControllerV1Create successfully', function(done) {
          // TODO: uncomment, update parameter values for navlinksControllerV1Create call
          /*

          instance.navlinksControllerV1Create(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('navlinksControllerV1FindAll', function() {
        it('should call navlinksControllerV1FindAll successfully', function(done) {
          // TODO: uncomment navlinksControllerV1FindAll call
          /*

          instance.navlinksControllerV1FindAll(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('navlinksControllerV1FindOne', function() {
        it('should call navlinksControllerV1FindOne successfully', function(done) {
          // TODO: uncomment, update parameter values for navlinksControllerV1FindOne call
          /*

          instance.navlinksControllerV1FindOne(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('navlinksControllerV1Remove', function() {
        it('should call navlinksControllerV1Remove successfully', function(done) {
          // TODO: uncomment, update parameter values for navlinksControllerV1Remove call
          /*

          instance.navlinksControllerV1Remove(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('navlinksControllerV1Update', function() {
        it('should call navlinksControllerV1Update successfully', function(done) {
          // TODO: uncomment, update parameter values for navlinksControllerV1Update call
          /*

          instance.navlinksControllerV1Update(body, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
